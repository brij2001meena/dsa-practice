QUESTION LINK->https://practice.geeksforgeeks.org/problems/word-wrap1646/1

#include<bits/stdc++.h>
using namespace std;

 // } Driver Code Ends
//User function Template for C++

class Solution {
public:
    int solveWordWrap(vector<int>nums, int k) 
    { 
        int n = nums.size();
      int sp[n+1][n+1];
      int ls[n+1][n+1];
      int c[n+1];
      int inf = INT_MAX;
      for(int i = 1 ; i<=n;i++)
      {
          sp[i][i] = k-nums[i-1];
          for(int j = i+1 ;j<=  n ;j++)
          {
              sp[i][j] = sp[i][j-1]-nums[j-1]-1;
          }
      }
       
      for(int i = 1 ;i<=n ;i++)
      {
          for(int j = i ; j<=n ;j++)
          {
              if(sp[i][j]<0)
              {
                  ls[i][j] = inf;
              }
              else if(j==n && sp[i][j]>=0)
              {
                  ls[i][j] = 0;
              }
              else{
                  ls[i][j] = sp[i][j]*sp[i][j];
              }
          }
      }
       
      c[0] = 0;
      for(int i =1 ; i<=n;i++)
      {
          c[i] = inf;
          for(int j = 1 ; j<=i ;j++)
          {
              if(c[j-1]!=inf && ls[j][i]!=inf && c[j-1]+ls[j][i]<c[i])
              {
                  c[i] = c[j-1]+ls[j][i]; 
              }
          }
      }
       
      return c[n];
    } 
};

// { Driver Code Starts.
int main(){
	int tc;
	cin >> tc;
	while(tc--){
		int n, k;
        cin >> n;
        vector<int>nums(n);
        for (int i = 0; i < n; i++)cin >> nums[i];
        cin >> k;
        Solution obj;
        cout << obj.solveWordWrap(nums, k) << endl;
	}
	return 0;
