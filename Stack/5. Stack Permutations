https://practice.geeksforgeeks.org/problems/stack-permutations/1?page=1&difficulty[]=1&category[]=Stack&curated[]=7&sortBy=submissions



class Solution{
public:
    int isStackPermutation(int n,vector<int> &a,vector<int> &b){
     stack<int>s;
     int i = 0  ,j =0;
     s.push(-1);
     while(i<n)
     {
         if(s.top()!=b[i]) // check second stack element are same as stack orr not if not then
         {
             if(j<n) // check first array index j is less then j 
             {
                 s.push(a[j]); // then push first stack element
                 j++;
             }
             else{
                 return 0; // if j>=n then 0 return
             }
         }
         else{
             s.pop(); // if same means it is one of operation on stack due to which they are same
             i++;
         }
     }
     return 1; // means all element of seconod are ssame as in some operation on stack with stack first
    }
};
