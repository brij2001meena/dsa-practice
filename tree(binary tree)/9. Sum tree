https://practice.geeksforgeeks.org/problems/sum-tree/1#
//node value is equal to the sum of its left subtree's value and its right subtree's value

class Solution
{
    public:
    pair<bool ,int>isfast(Node*root){
        if(root==NULL){
            pair<bool ,int>p = make_pair(true , 0);
            return p;
        }
        else{
            if(!root->left && !root->right){
                pair<bool ,int>p = make_pair(true , root->data);
                return p;
            }
            else{
               pair<bool ,int>l = isfast(root->left);
               pair<bool ,int>r = isfast(root->right);
               
               bool check = l.second+r.second==root->data;
               
               pair<bool ,int>ans;
               if(l.first && r.first && check){
                   ans.first = true;
                   ans.second = 2*root->data;
                    // ans.second = root->data+l.second+r.second;
               }
               else{
                   ans.first = false;
               }
               return ans;
            }
        }
    }
    bool isSumTree(Node* root)
    {
        return isfast(root).first; // Your code here
    }
};
