https://practice.geeksforgeeks.org/problems/tree-from-postorder-and-inorder/1/#


void createmapping(int in[] ,map<int ,int>&nodetoindex, int n){
        for(int i = 0 ;i<n;i++){
            nodetoindex[in[i]] = i;
        } //ye mapping ki taki harr bar element serch na krna paddega iss lai kiya ye
        
    }    
 Node* solve(int in[] , int post[] ,int &postindex , int instart , int inend ,int n ,map<int ,int>&nodetoindex){
        if(postindex<0 || instart>inend){
            return NULL;
        }
        else{
            int element = post[postindex--];
            Node* root = new Node(element);
            
            // int inpos = findininorder(in ,element , n);
            // root->right = solve(in ,post ,postindex ,inpos+1 ,inend ,n);
            // root->left = solve(in ,post ,postindex ,instart ,inpos-1 ,n);
            
            int inpos = nodetoindex[element];
            root->right = solve(in ,post ,postindex ,inpos+1 ,inend ,n ,nodetoindex);
            root->left = solve(in ,post ,postindex ,instart ,inpos-1 ,n,nodetoindex);
            return root;
        }
    }//Function to return a tree created from postorder and inoreder traversals.
Node *buildTree(int in[], int post[], int n) {
    int postindex = n-1;
    // Node* root = solve(in ,post ,postindex ,0 ,n-1 ,n);
    map<int ,int>nodetoindex;
    createmapping(in ,nodetoindex ,n);
    Node* root = solve(in ,post ,postindex ,0 ,n-1 ,n ,nodetoindex);
    return root; // Your code here
}
