create insert and delete

#include<iostream>
using namespace std;

class heap{
public:
    int arr[100];
    int size;

    heap()
    {
        arr[0] = -1;
        size = 0;
    }
    void insert(int v)
    {
        size = size+1;
        int index =size;

        arr[index] = v;

        while(index>1)
        {
            int p = index/2;
            if(arr[p]<arr[index])
            {
                swap(arr[p] , arr[index]);
            }
            else{
                return;
            }
        }
    }

    void print()
    {
        for(int i= 1;i<=size;i++)
        {
            cout<<arr[i]<<" ";
        }
        cout<<endl;
    }

    void del()
    {  // always delete first node in heap;
        if(size==0)
        {
            return;
        }

        int i=1;
        arr[1]=arr[size];  //replace first node with last node
        size--; //make unable to access last element

        while(i<size) // check it is at right position or not
        {
            int li = 2*i;
            int ri = 2*i+1;
            if(li<size && arr[i]<arr[li])
            {
                swap(arr[li] , arr[i]);
                i = li;
            }
            else if(ri<size && arr[i]<arr[ri])
            {
                swap(arr[ri] , arr[i]);
                i = ri;
            }
            else{
                return ;
            }
        }
    }
};
int main()
{
    heap h;
    h.insert(50);
    h.insert(55);
    h.insert(53);
    h.insert(52);
    h.insert(54);
    //h.print();

    h.del();
    // h.print();
    return 0;
}
