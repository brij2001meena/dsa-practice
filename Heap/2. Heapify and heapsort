

#include<iostream>
using namespace std;

void heapify(int arr[] , int n ,int i)
{
    int large = i;
    int l = 2*i;
    int r = 2*i+1;

    if(l<=n &&arr[large]<arr[l])
    {
        large = l;
    }
    if(r<=n && arr[large]<arr[r])
    {
        large = r;
    }
    if(large!=i)
    {
        swap(arr[large] , arr[i]);
        heapify(arr , n ,large);
    }
}

void heapsort(int arr[], int n)
{
    int t=n;
    while(t>1)
    {
        swap(arr[1] ,arr[t]); // swap last becuase last is smallest
        t--; // make unable to reach last;
        heapify(arr ,t ,1); // position the first node new element to its correct position
    }
}

int main()
{
    int arr[6] = {-1 ,54,53,55,52,50};
    int n=5;
    for(int i =n/2 ;i>0 ;i--)
    {
        heapify(arr ,n ,i);
    }

    heapsort(arr ,n);

    for(int i = 1 ;i<=n;i++)
    {
        cout<<arr[i]<<" ";
    }
}
