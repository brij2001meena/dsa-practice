https://www.codingninjas.com/codestudio/problems/count-ways-to-reach-nth-stairs_798650?utm_source=youtube&utm_medium=affiliate&utm_campaign=love_babbar_10  (ye dp se hoga)



//time complexity O(n)
//space O(n);
class Solution
{
    public:
    int countways(int n ,int dp[])
    {
        if(n<=1)
        {
            dp[n] =1;
            return dp[n];
        }
        if(dp[n]!=-1)
        {
            return dp[n];// return already found solution
        }
        dp[n] = (countways(n-1 ,dp)+countways(n-2 ,dp))%1000000007; // it is like fnding fibonacci series element
        return dp[n];
    }
    //Function to count number of ways to reach the nth stair.
    int countWays(int n)
    {
       int dp[n+1];
       memset(dp ,-1 ,sizeof dp);// it set or copy -1 to the dp array
       return countways(n ,dp);
    }
};



//it is also solution but timecolpexity is 2^n
int countDistinctWayToClimbStair(long long n)
{
     if(n<0)
        {
            return 0;
        }
        else if(n==0)
        {
            return 1;
        }
        else {
            return (countDistinctWayToClimbStair(n-1)+countDistinctWayToClimbStair(n-2))%1000000007;// nth stair per ya to bo n-1 step se aaya hoga ya fir n-2 se
        }//  Write your code here.
}
